---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: tyk-backend-secrets
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  project: default
  source:
    repoURL: 'https://github.com/TykTechnologies/tyk-istio-demo'
    path: resources/tyk
    targetRevision: HEAD
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: tyk
  syncPolicy:
    automated: {}
    syncOptions:
      - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: tyk-redis
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  project: default
  source:
    repoURL: https://charts.bitnami.com/bitnami
    chart: redis
    targetRevision: 19.6.2
    helm:
      parameters:
        - name: replica.replicaCount
          value: "0"
        - name: auth.existingSecret
          value: tyk-backend-secrets
        - name: auth.password
          value: redis-password
        - name: master.resourcesPreset
          value: "none"
        - name: replica.resourcesPreset
          value: "none"
  destination:
    server: https://kubernetes.default.svc
    namespace: tyk
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: tyk-postgres
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  project: default
  source:
    repoURL: https://charts.bitnami.com/bitnami
    chart: postgresql
    targetRevision: 15.5.18
    helm:
      parameters:
        - name: auth.database
          value: tyk_analytics
        - name: global.postgresql.auth.existingSecret
          value: tyk-backend-secrets
  destination:
    server: https://kubernetes.default.svc
    namespace: tyk
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: tyk-stack
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  project: default
  source:
    repoURL: https://helm.tyk.io/public/helm/charts
    chart: tyk-stack
    targetRevision: 1.6.0
    helm:
      parameters:
        - name: global.license.dashboard
          value: >-
            YOUR-LICENSE-GOES-HERE
        - name: global.adminUser.password
          value: topsecretpassword
        - name: global.redis.passSecret.name
          value: tyk-backend-secrets
        - name: global.redis.passSecret.keyName
          value: redis-password
        - name: global.redis.addrs
          value: 'tyk-redis-master.tyk.svc:6379'
        - name: global.postgres.connectionStringSecret.name
          value: tyk-backend-secrets
        - name: global.postgres.connectionStringSecret.keyName
          value: postgresURL
        - name: global.components.bootstrap
          value: 'true'
        - name: tyk-bootstrap.bootstrap.dashboard
          value: 'true'
        - name: tyk-bootstrap.bootstrap.portal
          value: 'false'
  destination:
    server: https://kubernetes.default.svc
    namespace: tyk
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
